{"version":3,"sources":["cover.js"],"names":[],"mappings":"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","file":"cover.min.js","sourcesContent":[";(function ($, window) {\n\n  \"use strict\";\n\n  var $window = $(window);\n\n\n  // COVER CLASS DEFINITION\n  // ======================\n\n  function Cover (element, options) {\n    this.options  = $.extend({}, Cover.DEFAULTS, options);\n    this.$element = $(element);\n    this.$wrapper = this.findWrapper();\n\n    this.width    = null;\n    this.height   = null;\n    this.ratio    = null;\n\n    this.onResize = null;\n    this.onRemove = null;\n\n    this.init();\n  }\n\n  Cover.DEFAULTS = {\n\n    // 'left', 'right' or 'center'\n    x: 'center',\n\n    // 'top', 'bottom' or 'center'\n    y: 'center',\n\n    // 'scroll' or 'fixed'\n    attachment: 'scroll',\n\n    // Wrapper selector used with 'closest'\n    wrapper: null,\n\n    // Use CSS if browser is compatible\n    css: true,\n\n    // onInit\n    onInit: function () {\n      $(this).fadeTo(0, 0);\n    },\n\n    // onLoad\n    onLoad: function () {\n      $(this).fadeTo(400, 1);\n    }\n\n  };\n\n  Cover.prototype.init = function () {\n    var options = this.options,\n        $element = this.$element,\n        $wrapper = this.$wrapper;\n\n    // Use css 'background-size' if supported\n    if (options.css && ($('html').hasClass('bgsizecover') || (!window.Modernizr && $wrapper.css('background-size', 'cover') && $wrapper.css('background-size') === 'cover'))) {\n      $wrapper.css({\n        'background-image':      'url(' + $element.attr('src') + ')',\n        'background-position':   options.x + ' ' + options.y,\n        'background-attachment': options.attachment\n      });\n      $element.hide();\n      return;\n    }\n\n    // Init wrapper\n    if (options.attachment === 'scroll' && !$wrapper.is('body')) {\n      if (-1 === $.inArray($wrapper.css('position'), ['absolute', 'relative', 'fixed'])) {\n        $wrapper.css('position', 'relative');\n      }\n      $wrapper.css('overflow', 'hidden');\n    }\n\n    // Init element\n    $element.css({\n      'position':   'absolute',\n      'width':      'auto',\n      'min-width':  '0',\n      'max-width':  'none',\n      'height':     'auto',\n      'min-height': '0',\n      'max-height': 'none'\n    });\n\n    // Bindings\n    this.onResize = $.proxy(this.resize, this);\n    this.onRemove = $.proxy(this.destroy, this);\n    $window.on('resize', this.onResize);\n    $window.on('orientationchange', this.onResize);\n    $element.one('remove', this.onRemove);\n\n    // Callback\n    if (typeof this.options.onInit === 'function') {\n      this.options.onInit.call($element);\n    }\n\n    $element.trigger('initialized.cover');\n\n    if ($element.get(0).complete) {\n      this.loaded();\n    } else {\n      $element.one('load', $.proxy(this.loaded, this));\n    }\n  };\n\n  Cover.prototype.destroy = function () {\n    $window.off('resize', this.onResize);\n    $window.off('orientationchange', this.onResize);\n    this.$element.off('remove', this.onRemove);\n    this.$element.removeData('wxr.cover');\n  };\n\n  Cover.prototype.loaded = function () {\n    this.resize();\n\n    if (typeof this.options.onLoad === 'function') {\n      this.options.onLoad.call(this.$element);\n    }\n\n    this.$element.trigger('loaded.cover');\n  };\n\n  Cover.prototype.findWrapper = function () {\n    var options  = this.options,\n        $element = this.$element,\n        $wrapper;\n\n    if (typeof options.wrapper === 'string') {\n      $wrapper = $element.closest(options.wrapper);\n    } else {\n      $wrapper = $element.parent();\n      while (\n        !$wrapper.is('body') &&\n        -1 === $.inArray($wrapper.css('position'), ['relative', 'absolute']) &&\n        -1 === $.inArray($wrapper.css('display'), ['block', 'inline-block'])\n      ) {\n        $wrapper = $wrapper.parent();\n      }\n    }\n    return $wrapper;\n  };\n\n  Cover.prototype.getOriginalWidth = function () {\n    if (!this.width) {\n      this.width = this.$element.attr('width') || this.$element.get(0).width || 1;\n    }\n    return this.width;\n  };\n\n  Cover.prototype.getOriginalHeight = function () {\n    if (!this.height) {\n      this.height = this.$element.attr('height') || this.$element.get(0).height || 1;\n    }\n    return this.height;\n  };\n\n  Cover.prototype.getOriginalRatio = function () {\n    if (!this.ratio) {\n      this.ratio = this.getOriginalWidth() / this.getOriginalHeight();\n    }\n    return this.ratio;\n  };\n\n  Cover.prototype.getWrapperWidth = function () {\n    var $wrapper = this.options.attachment === 'fixed' ? $window : this.$wrapper;\n\n    return $wrapper.width();\n  };\n\n  Cover.prototype.getWrapperHeight = function () {\n    var $wrapper = this.options.attachment === 'fixed' ? $window : this.$wrapper;\n\n    return $wrapper.height();\n  };\n\n  Cover.prototype.getWrapperRatio = function () {\n    return this.getWrapperWidth() / (this.getWrapperHeight() || 1);\n  };\n\n  Cover.prototype.resize = function () {\n    var options  = this.options,\n        $element = this.$element;\n\n    if (this.getWrapperRatio() < this.getOriginalRatio()) {\n\n      $element.css({\n        'width' : 'auto',\n        'height': '100%',\n        'top': 0\n      });\n\n      switch (options.x) {\n        case 'left':\n          $element.css({\n            left: 0,\n            right: 'none'\n          });\n          break;\n        case 'right':\n          $element.css({\n            left: 'none',\n            right: 0\n          });\n          break;\n        default:\n          $element.css({\n            left: -(($element.width() - this.getWrapperWidth()) / 2),\n            right: 'none'\n          });\n      }\n\n    } else {\n\n      $element.css({\n        'width' : '100%',\n        'height': 'auto',\n        'left': 0\n      });\n\n      switch (options.y) {\n        case 'top':\n          $element.css({\n            top: 0,\n            bottom: 'none'\n          });\n          break;\n        case 'bottom':\n          $element.css({\n            top: 'none',\n            bottom: 0\n          });\n          break;\n        default:\n          $element.css({\n            top: -(($element.height() - this.getWrapperHeight()) / 2),\n            bottom: 'none'\n          });\n      }\n\n    }\n\n    $element.trigger('resized.cover');\n  };\n\n\n  // COVER PLUGIN DEFINITION\n  // =======================\n\n  var old = $.fn.cover;\n\n  $.fn.cover = function (o) {\n    return this.each(function () {\n      var $this   = $(this),\n          data    = $this.data('wxr.cover'),\n          options = typeof o === 'object' ? o : {};\n\n      if (!data) {\n        $this.data('wxr.cover', data = new Cover(this, options));\n      }\n\n      if (typeof o === 'string') {\n\n        if (o === 'resize') {\n          data.resize();\n        } else if (o === 'destroy') {\n          data.destroy();\n        }\n\n      }\n    });\n  };\n\n  $.fn.cover.Constructor = Cover;\n\n\n  // COVER NO CONFLICT\n  // =================\n\n  $.fn.cover.noConflict = function () {\n    $.fn.cover = old;\n    return this;\n  };\n\n\n  // COVER DATA-API\n  // ==============\n\n  $(function () {\n    $('[data-size=\"cover\"]').each(function () {\n      var $this = $(this);\n      $this.cover($this.data());\n    });\n  });\n\n})(window.jQuery, window);\n"],"sourceRoot":"/source/"}